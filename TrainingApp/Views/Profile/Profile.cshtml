<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <link href="~/ProfileStyle/Style.css" rel="stylesheet" />
</head>
<body>
    <div class="profile-container">
        <div class="profile-header">
            <div class="profile-picture">
                <div class="profile-picture-container">
                    <img src="@(Model.ProfilePicturePath ?? Url.Content("~/Content/Images/default.jpg"))" alt="Profile Picture" id="profile-picture">
                    <div class="icon-container">
                        <div class="delete-icon" onclick="deleteProfilePicture();">
                            <i class="fa fa-trash"></i>
                        </div>
                    </div>
                    <form id="uploadForm" action="@Url.Action("UploadProfilePicture", "Profile")" method="post" enctype="multipart/form-data" style="display:none;">
                        <input type="file" id="profilePictureInput" name="profilePicture" accept="image/*">
                    </form>
                </div>
                <div class="profile-info">
                    <h1>@Model.Name</h1>
                    <p>Email: @Model.Email</p>
                    <p>Role: @Model.Roles</p>
                </div>
            </div>
        </div>
        <div class="profile-body">
            <div class="profile-nav">
                <ul>
                    <li><a href="#details" class="active">Details</a></li>
                    <li><a href="#activities">Recent Activities</a></li>
                    <li><a href="#settings">Settings</a></li>
                </ul>
            </div>
            <div class="profile-content">
                <div id="details" class="content-section active">
                    <h2>Details</h2>
                    <p>Full Name: @Model.Name</p>
                    <p>Email: @Model.Email</p>
                    <p>Role: @Model.Roles</p>
                </div>
                <div id="activities" class="content-section">
                    <h2>Recent Activities</h2>
                    <ul>
                        <li>Submitted report to Supervisor A</li>
                        <li>Received feedback from Supervisor B</li>
                        <li>Last Login: @(Model.LastLogin == DateTime.MinValue ? "Never" : Model.LastLogin.ToString("f"))</li>
                    </ul>
                </div>
                <div id="settings" class="content-section">
                    <h2>Settings</h2>
                    <form id="settingsForm" action="@Url.Action("UpdateProfile", "Profile")" method="post">
                        <label for="fullName">Full Name:</label>
                        <input type="text" id="fullName" name="fullName" value="@Model.Name" required>

                        <label for="email">Email:</label>
                        <input type="email" id="email" name="email" value="@Model.Email" required>

                        <label for="password">Password:</label>
                        <input type="password" id="password" name="password">

                        <button type="submit">Save Changes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const profilePicture = document.getElementById('profile-picture');
            const fileInput = document.getElementById('profilePictureInput');
            const uploadForm = document.getElementById('uploadForm');

            if (profilePicture) {
                profilePicture.addEventListener('click', function () {
                    fileInput.click();
                });

                fileInput.addEventListener('change', function () {
                    uploadForm.submit();
                });
            } else {
                console.error('Profile picture element not found.');
            }

            const navLinks = document.querySelectorAll('.profile-nav ul li a');
            const contentSections = document.querySelectorAll('.content-section');

            navLinks.forEach(link => {
                link.addEventListener('click', function (event) {
                    event.preventDefault();
                    navLinks.forEach(link => link.classList.remove('active'));
                    this.classList.add('active');
                    contentSections.forEach(section => section.classList.remove('active'));
                    const targetId = this.getAttribute('href').substring(1);
                    const targetSection = document.getElementById(targetId);
                    targetSection.classList.add('active');
                });
            });
        });

        function deleteProfilePicture() {
            if (confirm('Are you sure you want to delete your profile picture?')) {
                fetch('@Url.Action("DeleteProfilePicture", "Profile")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        profilePicturePath: '@Model.ProfilePicturePath'
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.reload();
                    } else {
                        alert('Failed to delete profile picture.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
            }
        }
    </script>
</body>
</html>
