@using TrainingApp.ViewModels
@using TrainingApp.Models
@model DashboardViewModel

<link href="~/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet" />

<div class="container mt-4">
    <h1>Admin Dashboard</h1>
    <hr />
    <div class="active">
        <div class="content">
            <div class="container">
                <div class="page-title">
                    <h3>
                        Users
                        <button type="button" class="btn btn-sm btn-outline-primary float-end" data-bs-toggle="modal" data-bs-target="#addUserModal">Add User</button>
                    </h3>

                    <!-- Add User Modal -->
                    <div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="addUserModalLabel">Add User</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    @using (Html.BeginForm("AddUser", "Admin", FormMethod.Post, new { id = "addUserForm" }))
                                    {
                                        @Html.AntiForgeryToken()

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Name)
                                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @id = "name", @autocomplete = "name" })
                                            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Email)
                                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @id = "email", @autocomplete = "email" })
                                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Password)
                                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", @id = "password", @autocomplete = "new-password" })
                                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.UserRole)
                                            @{
                                                foreach (var role in Enum.GetValues(typeof(UserRole)))
                                                {
                                                    <div class="form-check">
                                                        <input type="radio" class="form-check-input" id="userRole_@(role)" name="UserRole" value="@role" />
                                                        <label class="form-check-label" for="userRole_@(role)">@role</label>
                                                    </div>
                                                }
                                            }
                                            @Html.ValidationMessageFor(m => m.UserRole, "", new { @class = "text-danger" })
                                        </div>

                                        <div id="additionalFields" style="display: none;"></div>
                                        <button type="submit" class="btn btn-primary">Add User</button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- User Table -->
                <div class="box box-primary">
                    <div class="box-body">
                        <table width="100%" class="table table-hover" id="dataTables-example">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Role</th>
                                    <th>Added By</th>
                                    <th>University</th>
                                    <th>Supervisor</th>
                                    <th>Company</th>
                                    <th>Supervisor</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model.users)
                                {
                                    <tr>
                                        <td>@user.Id</td>
                                        <td>@user.Name</td>
                                        <td><a href="mailto:@user.Email">@user.Email</a></td>
                                        <td>@user.Roles</td>
                                        <td>@user.AddedBy</td>
                                        <td>@(user.UniversityID != null ? Model.GetUniName((int)user.UniversityID) : "Not Found")</td>
                                        <td>@(user.UniversitySupervisorID != null ? Model.GetSupervisorName(user.UniversitySupervisorID.Value) : "Not Found")</td>
                                        <td>@(user.CompanyID != null ? Model.GetCompanyName((int)user.CompanyID) : "Not Found")</td>
                                        <td>@(user.CompanySupervisorID != null ? Model.GetSupervisorName(user.CompanySupervisorID.Value) : "Not Found")</td>
                                        <td class="text-end">
                                            <a href="" class="btn btn-outline-info btn-sm"><i class="fas fa-pen"></i></a>
                                            <form action="@Url.Action("DeleteUser")" method="post" style="display:inline;">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="id" value="@user.Id" />
                                                <button type="submit" class="btn btn-outline-danger btn-sm" onclick="return confirm('Are you sure you want to delete this user?');">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </form>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Include necessary scripts -->
<script src="~/vendor/jquery/jquery.min.js"></script>
<script src="~/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="~/vendor/datatables/datatables.min.js"></script>
<script src="~/js/initiate-datatables.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $('input[name="UserRole"]').change(function () {
            var role = $(this).val();
            var additionalFields = $('#additionalFields');
            additionalFields.empty().show();

            if (role === 'UniversitySupervisor') {
                var universityOptions = '@(new HtmlString(string.Join("", Model.UniversityNames.Select(u => $"<option value=\"{u.Value}\">{u.Text}</option>"))))';
                additionalFields.append(`
                    <div class="form-group">
                        <label for="UniversityID">University</label>
                        <select class="form-control" id="UniversityID" name="UniversityID">
                            ${universityOptions}
                        </select>
                        <span class="text-danger field-validation-valid" data-valmsg-for="UniversityID" data-valmsg-replace="true"></span>
                    </div>
                `);
            } else if (role === 'CompanySupervisor') {
                var companyOptions = '@(new HtmlString(string.Join("", Model.CompaniesNames.Select(c => $"<option value=\"{c.Value}\">{c.Text}</option>"))))';
                additionalFields.append(`
                    <div class="form-group">
                        <label for="CompanyID">Company</label>
                        <select class="form-control" id="CompanyID" name="CompanyID">
                            ${companyOptions}
                        </select>
                        <span class="text-danger field-validation-valid" data-valmsg-for="CompanyID" data-valmsg-replace="true"></span>
                    </div>
                `);
            } else if (role === 'Trainer') {
                var universityOptions = '@(new HtmlString(string.Join("", Model.UniversityNames.Select(u => $"<option value=\"{u.Value}\">{u.Text}</option>"))))';
                var universitySupervisorOptions = '@(new HtmlString(string.Join("", Model.UniSupervisors.Select(s => $"<option value=\"{s.Value}\">{s.Text}</option>"))))';
                var companySupervisorOptions = '@(new HtmlString(string.Join("", Model.CompanySupervisors.Select(s => $"<option value=\"{s.Value}\">{s.Text}</option>"))))';

                additionalFields.append(`
                    <div class="form-group">
                        <label for="UniversityID">University</label>
                        <select class="form-control" id="UniversityID" name="UniversityID">
                            ${universityOptions}
                        </select>
                        <span class="text-danger field-validation-valid" data-valmsg-for="UniversityID" data-valmsg-replace="true"></span>
                    </div>
                    <div class="form-group">
                        <label for="UniversitySupervisorID">University Supervisor</label>
                        <select class="form-control" id="UniversitySupervisorID" name="UniversitySupervisorID">
                            ${universitySupervisorOptions}
                        </select>
                        <span class="text-danger field-validation-valid" data-valmsg-for="UniversitySupervisorID" data-valmsg-replace="true"></span>
                    </div>
                    <div class="form-group">
                        <label for="CompanySupervisorID">Company Supervisor</label>
                        <select class="form-control" id="CompanySupervisorID" name="CompanySupervisorID">
                            ${companySupervisorOptions}
                        </select>
                        <span class="text-danger field-validation-valid" data-valmsg-for="CompanySupervisorID" data-valmsg-replace="true"></span>
                    </div>
                `);
            }
        });
    });
</script>
