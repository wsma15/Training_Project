@using TrainingApp.Models
@model RegisterViewModel

@{
    ViewBag.Title = "User Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <link href="~/Login/css/main.css" rel="stylesheet" />
    <link href="~/Login/css/util.css" rel="stylesheet" />
    <link href="~/Login/vendor/select2/select2.min.css" rel="stylesheet" />
    <link href="~/Login/vendor/css-hamburgers/hamburgers.min.css" rel="stylesheet" />
    <link href="~/Login/vendor/animate/animate.css" rel="stylesheet" />
    <link href="~/Login/fonts/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" />
    <link href="~/Login/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="~/Login/images/icons/favicon.ico" />
</head>

<body>
    <div class="limiter">
        <div>
            <div class="wrap-login100">
                <div class="login100-pic js-tilt" data-tilt>
                    <img src="~/Login/images/Logo training management system-modified.png" />
                </div>
                @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form" }))
                {
                    @Html.AntiForgeryToken()
            <div class="login100-form validate-form">
                <span class="login100-form-title">
                    Register
                </span>

                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success">
                        @TempData["SuccessMessage"]
                    </div>

                }

                <div class="wrap-input100 validate-input" data-validate="@Html.ValidationMessageFor(m => m.FullName).ToString()">
                    @Html.TextBoxFor(m => m.FullName, new
                    {
                        @class = "input100",
                        placeholder = "Full Name",
                        type = "text",
                        pattern = "[a-zA-Z ]+"
                    })
                    <span class="focus-input100"></span>
                    <span class="symbol-input100">
                        <i class="fa fa-user" aria-hidden="true"></i>
                    </span>
                </div>
                <p>

                    @Html.ValidationMessageFor(m => m.FullName)
                </p>
                <div class="wrap-input100 validate-input" data-validate="@Html.ValidationMessageFor(m => m.Email).ToString()">
                    @Html.TextBoxFor(m => m.Email, new
                    {
                        @class = "input100",
                        placeholder = "Email",
                        type = "email"
                    })
                    <span class="focus-input100"></span>
                    <span class="symbol-input100">
                        <i class="fa fa-envelope" aria-hidden="true"></i>
                    </span>
                </div>
                <p>
                    @Html.ValidationMessageFor(m => m.Email)
                </p>

                <div class="wrap-input100 validate-input" data-validate="@Html.ValidationMessageFor(m => m.Password).ToString()">
                    @Html.PasswordFor(m => m.Password, new
                    {
                        @class = "input100",
                        placeholder = "Password",
                        type = "password"
                    })
                    <span class="focus-input100"></span>
                    <span class="symbol-input100">
                        <i class="fa fa-lock" aria-hidden="true"></i>
                    </span>
                </div>
                <p>

                    @Html.ValidationMessageFor(m => m.Password)
                </p>
                <div class="wrap-input100 validate-input" data-validate="@Html.ValidationMessageFor(m => m.ConfirmPassword).ToString()">
                    @Html.PasswordFor(m => m.ConfirmPassword, new
                    {
                        @class = "input100",
                        placeholder = "Confirm Password",
                        type = "password"
                    })
                    <span class="focus-input100"></span>
                    <span class="symbol-input100">
                        <i class="fa fa-lock" aria-hidden="true"></i>
                    </span>
                </div>
                <p>

                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
</p>
                    <p>
                                    @Html.ValidationSummary()
                        </p>
                    <div class="container-login100-form-btn">
                        <button type="submit" class="login100-form-btn">
                            Register
                        </button>
                        <div class="text-center p-t-136">
                            <a class="txt2" href="@Url.Action("Login", "Account")">
                                Already Have An Account?
                                <i class="fa fa-long-arrow-right m-l-5" aria-hidden="true"></i>
                            </a>
                        </div>
                    </div>
            </div>
                }
            </div>
        </div>
    </div>

    <script src="~/Login/vendor/jquery/jquery-3.2.1.min.js"></script>
    <script src="~/Login/vendor/bootstrap/js/popper.js"></script>
    <script src="~/Login/vendor/bootstrap/js/bootstrap.min.js"></script>
    <script src="~/Login/vendor/select2/select2.min.js"></script>
    <script src="~/Login/vendor/tilt/tilt.jquery.min.js"></script>
</body>
