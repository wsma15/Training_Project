@model IEnumerable<TrainingApp.ViewModels.UsersPanelViewModels>
@using TrainingApp.ViewModels;
@using Microsoft.AspNet.Identity;

@{
    ViewBag.Title = "Inbox";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <!-- Left Panel: List of Unique Users -->
        <div class="col-md-4">
            <h3>Users</h3>
            <ul class="list-group">
                @foreach (var user in Model)
                {
                    <li class="list-group-item">
                        <a href="#" class="user-link" data-senderid="@user.Id">@user.Name</a>
                    </li>
                }
            </ul>
        </div>

        <!-- Right Panel: Chat History and Message Box -->
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h3>Chat History</h3>
                </div>
                <div class="card-body chat-history">
                    <!-- Chat Messages -->
                    <div class="chat-messages" id="chat-messages">
                        <!-- Messages will be loaded here via AJAX -->
                    </div>
                    <!-- Message Box -->
                    <div class="chat-input">
                        @using (Html.BeginForm("SendNewMessage", "Message", FormMethod.Post, new { id = "messageForm" }))
                        {
                            @Html.AntiForgeryToken()
                            <input type="hidden" id="receiverId" name="ReceiverId" />
                            <div class="input-group">
                                <input type="text" class="form-control" id="messageText" name="MessageText" placeholder="Type a message..." />
                                <span class="input-group-btn">
                                    <button class="btn btn-primary" type="submit">Send</button>
                                </span>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script>
    $(document).ready(function() {
        // Load chat history when a user is clicked
        $('.user-link').click(function(e) {
            e.preventDefault();
            var receiverId = $(this).data('senderid');
            $('#receiverId').val(receiverId);
            loadChatHistory(receiverId);
        });

        // Function to load chat history via AJAX
        function loadChatHistory(receiverId) {
            $.get('@Url.Action("GetChatHistory", "Message")', { receiverId: receiverId }, function(data) {
                var chatMessages = $('#chat-messages');
                chatMessages.empty();
                $.each(data, function(index, message) {
                    var formattedTime = formatTimestamp(message.Timestamp);
                    chatMessages.append('<div><strong>' + message.SenderName + ':</strong> ' + message.MessageText + ' <span class="text-muted small">' + formattedTime + '</span></div>');
                });
            });
        }

        // Handle form submission for sending a new message
        $('#messageForm').submit(function(e) {
            e.preventDefault(); // Prevent the default form submission

            var form = $(this);
            $.post(form.attr('action'), form.serialize(), function() {
                var receiverId = $('#receiverId').val();
                loadChatHistory(receiverId); // Reload chat history
                $('#messageText').val(''); // Clear the message box
            });
        });

        // Function to format the timestamp
        function formatTimestamp(timestamp) {
            var now = moment();
            var messageTime = moment.utc(timestamp).local(); // Convert UTC to local time

            if (messageTime.isSame(now, 'day')) {
                return messageTime.format('h:mm A') + ' (Today)';
            } else if (messageTime.isSame(now.subtract(1, 'days'), 'day')) {
                return messageTime.format('h:mm A') + ' (Yesterday)';
            } else {
                return messageTime.format('h:mm A, MMM D, YYYY');
            }
        }
    });
</script>
